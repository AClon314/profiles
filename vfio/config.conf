# pci_addr vendor:device _A: Audio Sync _i: integrated GPU
declare -A PCI_GPU PCI_AUD V_D_GPU V_D_AUD

#      =(nvidia amd intel) will give all gpu to vm guest
GPU_KEY=(nvidia)

# which gpu for xorg
XORG_KEY=amd_i
XORG_DRIVER_NAME=amdgpu # run './vfio l' or 'lspci -k': Kernel driver in use:...
XORG_CONFIG="/etc/X11/xorg.conf.d/20-not-use-nvidia.conf"

PCI_GPU[nvidia]=01_00_0
PCI_AUD[nvidia]=01_00_1
PCI_GPU[amd]=''
PCI_AUD[amd]=''
PCI_GPU[amd_i]=06_00_0
PCI_GPU[intel]=''
PCI_AUD[intel]=''

V_D_GPU[nvidia]=10de:25e2
V_D_AUD[nvidia]=10de:2291
V_D_GPU[amd]=''
V_D_AUD[amd]=''
V_D_GPU[amd_i]=1002:1638
V_D_GPU[intel]=''
V_D_AUD[intel]=''

# looking-glass
DISPLAY_MEM_SIZE="32" #https://looking-glass.io/docs/B7-rc1/install_libvirt/#determining-memory

# ðŸš«DON'T EDIT BELOW LINES !!!
title() {
  echo -e -n "\033]0;$*\007"
}
yn() {
  yn_text="y/n"
  case $1 in
    [Yy]) yn_text="Y/n"; default1=$1; shift 1;;
    [Nn]) yn_text="y/N"; default1=$1; shift 1;;
  esac

  while true; do
    read -p "$* [$yn_text]: " key
      case $key in
        [Yy]) return 0 ;;
        [Nn]) echo -e "\tAborted" ; return 1 ;;
        "") if [ -n "$default1" ]; then 
            [[ "$default1" =~ [Yy] ]] && return 0 || return 1;
          fi ;;
    esac
  done
}
Yn() {
  yn Y $*
}
yN() {
  yn N $*
}
config() {
  local i=$(printf '%q' "$1")
  shift 1
  local k=$(printf '%q' "$*")
  sed -i "s/$i=\(.*\)/$i=$k/g" ./config.conf
}

export config title yn Yn yN PCI_GPU PCI_AUD V_D_GPU V_D_AUD DISPLAY_MEM_SIZE